<?php

    /**
     * ============================================================
     * MODULE : Gestion modale Bootstrap
     * AUTEUR : Alexis GOMY
     * DATE   : 2025-10-20
     * LICENCE : MIT ‚Äî voir le fichier LICENSE √† la racine du d√©p√¥t
     * ============================================================
     *
     * DESCRIPTION :
     * Ce module permet de g√©rer l'ouverture, la fermeture et le retour
     * entre diff√©rentes modales Bootstrap, selon un syst√®me hi√©rarchique
     * bas√© sur les attributs personnalis√©s : niveau, groupe, branche.
     *
     * UTILISATION :
     * - Inclure ce fichier dans votre logique PHP
     * - Associer les attributs requis aux boutons et modales
     * - Configurer les options via createModalFlowConfig()
     *
     * REMARQUE :
     * Ce module fait partie du d√©p√¥t "bootstrapModulesPhp"
     * https://github.com/NestWorkCloud/bootstrapModulesPhp
     */
    
?>
<!Doctype HTML>
<HTML lang="fr">
    <Head>
        <meta charset="UTF-8">
        <Title>R√©f√©rence technique : gestion modale par niveaux</Title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    </Head>
    <Body class="bg-light">
        <div class="container-lg my-4">
            <h1 class="text-center mb-5">üìö Documentation du syst√®me modale Bootstrap</h1>
            <div class="alert alert-info border-start border-4 border-primary shadow-sm mt-4" role="alert">
                <h4 class="alert-heading">üìò Attributs requis pour la gestion modale</h4>
                <p class="mb-2"><strong>C√¥t√© bouton (d√©clencheur)</strong> :</p>
                <ul class="mb-3">
                    <li><code>data-requestedModalLevel</code> : niveau cible √† ouvrir (ex : <code>"2"</code>)</li>
                    <li><code>data-modalGroup</code> : identifiant du groupe logique (ex : <code>"firstGroup"</code>)</li>
                    <li><code>data-modalBranch</code> : identifiant de la branche fonctionnelle (ex : <code>"1"</code>, <code>"2"</code>)</li>
                </ul>
                <p class="mb-2"><strong>C√¥t√© modale (cible √† ouvrir)</strong> :</p>
                <ul class="mb-3">
                    <li><code>data-modalLevel</code> : niveau hi√©rarchique de la modale</li>
                    <li><code>data-modalGroup</code> : identifiant du groupe auquel elle appartient</li>
                    <li><code>data-modalBranch</code> : identifiant de la branche associ√©e</li>
                </ul>
                <p class="mb-2"><strong>C√¥t√© retour (bouton de fermeture avec retour)</strong> :</p>
                <ul class="mb-3">
                    <li><code>data-returnToParentModal="true"</code> : active le retour vers le niveau pr√©c√©dent</li>
                </ul>
                <p class="mb-2"><strong>C√¥t√© fermeture volontaire (bouton de sortie)</strong> :</p>
                <ul class="mb-0">
                    <li><code>data-bs-dismiss="modal"</code> : d√©clenche une fermeture volontaire sans retour</li>
                </ul>
                <hr class="mt-4">
                <p class="mb-0">
                    <strong>Remarques :</strong> Le syst√®me utilise <em>niveau</em>, <em>groupe</em> et <em>branche</em> pour cibler pr√©cis√©ment la modale √† ouvrir.
                    En cas d‚Äôabsence de branche, un fallback est tent√© sans <code>data-modalBranch</code>.
                </p>
            </div>
            <div class="alert alert-warning border-start border-4 border-primary shadow-sm mt-4" role="alert">
                <h4 class="alert-heading">üîÅ Comportements automatiques du syst√®me modale</h4>
                <p class="mb-2"><strong>R√©ouverture automatique du modale initial</strong> :</p>
                <ul class="mb-3">
                    <li>Activ√©e si <code>autoRestore</code> est √† <code>true</code> dans la configuration</li>
                    <li>D√©clench√©e uniquement si aucun autre modale n‚Äôest ouvert au moment de la fermeture</li>
                    <li>Ignor√©e si la fermeture est volontaire (ex : clic sur la croix ou bouton avec <code>data-bs-dismiss="modal"</code>)</li>
                </ul>
                <p class="mb-2"><strong>Retour vers le modale pr√©c√©dent</strong> :</p>
                <ul class="mb-3">
                    <li>D√©clench√© par un bouton avec <code>data-returnToParentModal="true"</code></li>
                    <li>Recherche un modale au niveau <em>actuel - 1</em> avec la m√™me branche</li>
                    <li>Si non trouv√©, d√©cr√©mente la branche jusqu‚Äô√† <code>1</code> pour tenter un fallback</li>
                    <li>Si aucun modale n‚Äôest trouv√© avec branche, tente sans <code>data-modalBranch</code></li>
                </ul>
                <p class="mb-2"><strong>Fermeture volontaire (croix ou bouton d√©di√©)</strong> :</p>
                <ul class="mb-3">
                    <li>D√©tect√©e automatiquement via les boutons <code>.btn-close</code> ou tout bouton avec <code>data-bs-dismiss="modal"</code></li>
                    <li>Emp√™che la r√©ouverture automatique du modale initial</li>
                    <li>R√©initialise le suivi du modale sans d√©clencher d‚Äôaction</li>
                </ul>
                <hr class="mt-4">
                <p class="mb-0">
                    <strong>Remarques :</strong> Ces comportements sont g√©r√©s automatiquement par le script modulaire.
                    Ils peuvent √™tre d√©sactiv√©s ou adapt√©s via la configuration (<code>createModalFlowConfig()</code>).
                </p>
            </div>
            <div class="container py-5">
                <h2 class="text-center mb-4">üéõÔ∏è D√©clencheurs de modales</h2>
                <div class="container text-center">
                    <div class="row">
                        <div class="col">
                            <button type="button" class="btn btn-outline-primary w-100" data-modalGroup="firstGroup" data-modalBranch="1" data-requestedModalLevel="1">
                                üìã Modale de gestion
                            </button>
                        </div>
                        <div class="col">
                            <button type="button" class="btn btn-outline-primary w-100" data-modalGroup="firstGroup" data-modalBranch="1" data-requestedModalLevel="2">
                              ‚úèÔ∏è Cr√©er
                            </button>
                        </div>
                        <div class="col">
                            <button type="button" class="btn btn-outline-secondary w-100" data-modalGroup="firstGroup" data-modalBranch="2" data-requestedModalLevel="2">
                              üíæ Mettre √† jour
                            </button>
                        </div>
                        <div class="col">
                            <button type="button" class="btn btn-outline-secondary w-100" data-modalGroup="firstGroup" data-requestedModalLevel="3" data-modalBranch="2">
                                üíæ Mettre √† jour sensible
                            </button>
                        </div>
                        <div class="col">
                            <button type="button" class="btn btn-outline-danger w-100" data-modalGroup="firstGroup" data-modalBranch="3" data-requestedModalLevel="2">
                              üóëÔ∏è Supprimer
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="managementModal" tabindex="-1" aria-labelledby="managementModalLabel" aria-hidden="true" data-modalGroup="firstGroup" data-modalBranch="1" data-modalLevel="1">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="managementModalLabel">Modale de gestion</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                    </div>
                    <div class="modal-body">
                        <div class="container text-center">
                            <div class="row">
                                <div class="col">
                                    <button type="button" class="btn btn-outline-primary w-100" data-modalGroup="firstGroup" data-modalBranch="1" data-requestedModalLevel="2">
                                      ‚úèÔ∏è Cr√©er
                                    </button>
                                </div>
                                <div class="col">
                                    <button type="button" class="btn btn-outline-secondary w-100" data-modalGroup="firstGroup" data-modalBranch="2" data-requestedModalLevel="2">
                                      üíæ Mettre √† jour
                                    </button>
                                </div>
                                <div class="col">
                                    <button type="button" class="btn btn-outline-danger w-100" data-modalGroup="firstGroup" data-modalBranch="3" data-requestedModalLevel="2">
                                      üóëÔ∏è Supprimer
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-danger" data-bs-dismiss="modal" aria-label="Fermer">‚ùå Fermer</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true" data-modalGroup="firstGroup" data-modalBranch="1" data-modalLevel="2">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form action="" method="POST">
                        <div class="modal-header">
                            <h5 class="modal-title" id="createModalLabel">Modale de Cr√©ation</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                        </div>
                        <div class="modal-body">
                            Ceci est une modale minimaliste pour tester les comportements.
                        </div>
                        <div class="modal-footer justify-content-between flex-wrap">
                            <div class="d-flex gap-2">
                                <button type="button" class="btn btn-outline-secondary" data-returnToParentModal="true">
                                    ‚¨ÖÔ∏è Retour
                                </button>
                                <button type="button" class="btn btn-outline-danger" data-bs-dismiss="modal" aria-label="Fermer">
                                    ‚ùå Fermer
                                </button>
                            </div>
                            <div>
                                <button type="submit" class="btn btn-primary">‚úèÔ∏è Cr√©er</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="modal fade" id="updateModal" tabindex="-1" aria-labelledby="updateModalLabel" aria-hidden="true" data-modalGroup="firstGroup" data-modalBranch="2" data-modalLevel="2">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form action="" method="POST">
                        <div class="modal-header">
                            <h5 class="modal-title" id="updateModalLabel">Modale de mise √† jour</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                        </div>
                        <div class="modal-body">
                            <div class="container text-center">
                                <div class="row">
                                    <div class="col">
                                        <button type="button" class="btn btn-outline-secondary w-100" data-modalGroup="firstGroup" data-requestedModalLevel="3" data-modalBranch="2">
                                            üíæ Mettre √† jour la partie sensible
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer justify-content-between flex-wrap">
                            <div class="d-flex gap-2">
                                <button type="button" class="btn btn-outline-secondary" data-returnToParentModal="true">
                                    ‚¨ÖÔ∏è Retour
                                </button>
                                <button type="button" class="btn btn-outline-danger" data-bs-dismiss="modal" aria-label="Fermer">
                                    ‚ùå Fermer
                                </button>
                            </div>
                            <div>
                                <button type="submit" class="btn btn-secondary">üíæ Sauvegarder</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="modal fade" id="deletionModal" tabindex="-1" aria-labelledby="deletionModalLabel" aria-hidden="true" data-modalGroup="firstGroup" data-modalBranch="3" data-modalLevel="2">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form action="" method="POST">
                        <div class="modal-header">
                            <h5 class="modal-title" id="deletionModalLabel">Modale de suppression</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                        </div>
                        <div class="modal-body">
                            Ceci est une modale minimaliste pour tester les comportements.
                        </div>
                        <div class="modal-footer justify-content-between flex-wrap">
                            <div class="d-flex gap-2">
                                <button type="button" class="btn btn-outline-secondary" data-returnToParentModal="true">
                                    ‚¨ÖÔ∏è Retour
                                </button>
                                <button type="button" class="btn btn-outline-danger" data-bs-dismiss="modal" aria-label="Fermer">
                                    ‚ùå Fermer
                                </button>
                            </div>
                            <div>
                                <button type="submit" class="btn btn-danger">üóëÔ∏è Supprimer</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="modal fade" id="secondaryUpdateModale" tabindex="-1" aria-labelledby="secondaryUpdateModaleLabel" aria-hidden="true" data-modalGroup="firstGroup" data-modalBranch="2" data-modalLevel="3">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form action="" method="POST">
                        <div class="modal-header">
                            <h5 class="modal-title" id="secondaryUpdateModaleLabel">Modale de mise √† jour sensible</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                        </div>
                        <div class="modal-body">
                            Ceci est une modale minimaliste pour tester les comportements.
                        </div>
                        <div class="modal-footer justify-content-between flex-wrap">
                            <div class="d-flex gap-2">
                                <button type="button" class="btn btn-outline-secondary" data-returnToParentModal="true">
                                    ‚¨ÖÔ∏è Retour
                                </button>
                                <button type="button" class="btn btn-outline-danger" data-bs-dismiss="modal" aria-label="Fermer">
                                    ‚ùå Fermer
                                </button>
                            </div>
                            <div>
                                <button type="submit" class="btn btn-secondary">üíæ Sauvegarder</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Scripts pour le comportement des modales -->
        <script>
            // ‚öôÔ∏è Fonction de configuration du syst√®me modale
            // Cette fonction permet d'initialiser les param√®tres du syst√®me modale de fa√ßon centralis√©e et flexible.
            // Elle accepte un objet avec des valeurs personnalis√©es ou utilise des valeurs par d√©faut.
            // Cela permet de cr√©er plusieurs configurations si n√©cessaire, ou de modifier dynamiquement le comportement.
            function createModalFlowConfig({
                initialLevel = null,      // Niveau du premier modale ouvert
                initialGroup = null,      // Groupe du premier modale ouvert
                initialBranch = null,     // Branche du premier modale ouvert
                manualClose = false,      // Indique si la fermeture vient d‚Äôun clic volontaire (ex: croix)
                autoRestore = true        // Active ou d√©sactive la r√©ouverture automatique du modale initial
            } = {}) {
                return {
                    initialLevel,
                    initialGroup,
                    initialBranch,
                    manualClose,
                    autoRestore
                };
            }

            // üîÑ Fonction de r√©initialisation du suivi modale
            // Cette fonction remet √† z√©ro tous les param√®tres de suivi du syst√®me modale.
            // Elle est appel√©e apr√®s une fermeture volontaire ou apr√®s une r√©ouverture automatique.
            // Elle peut aussi √™tre utilis√©e manuellement pour r√©initialiser l‚Äô√©tat du syst√®me.
            function resetModalTracking() {
                modalFlowConfig.initialLevel = null;
                modalFlowConfig.initialGroup = null;
                modalFlowConfig.initialBranch = null;
                modalFlowConfig.manualClose = false;
            }

            // üîì Fonction d'initialisation de l‚Äôouverture des modales
            // Cette fonction √©coute les boutons qui d√©clenchent l‚Äôouverture d‚Äôun modale sp√©cifique.
            // Elle enregistre le premier modale ouvert comme point de retour potentiel.
            // Elle ferme les modales ouvertes avant d‚Äôen ouvrir une nouvelle cibl√©e par niveau, groupe et branche.
            function initModalOpening() {
                document.querySelectorAll('button[data-requestedModalLevel]').forEach(button => {
                    button.addEventListener('click', () => {
                        const requestedLevel = button.getAttribute('data-requestedModalLevel');
                        const requestedGroup = button.getAttribute('data-modalGroup');
                        const requestedBranch = button.getAttribute('data-modalBranch');

                        if (!modalFlowConfig.initialLevel){
                            modalFlowConfig.initialLevel = requestedLevel;
                            modalFlowConfig.initialGroup = requestedGroup;
                            modalFlowConfig.initialBranch = requestedBranch;
                        }

                        document.querySelectorAll('.modal.show').forEach(modal => {
                            const instance = bootstrap.Modal.getInstance(modal);
                            if (instance) instance.hide();
                        });

                        const targetModal = document.querySelector(`.modal[data-modalLevel="${requestedLevel}"][data-modalGroup="${requestedGroup}"][data-modalBranch="${requestedBranch}"]`);
                        if (targetModal){
                            const instance = bootstrap.Modal.getOrCreateInstance(targetModal);
                            instance.show();
                        }else{
                            console.warn("‚ùå Aucun modale trouv√© pour :", requestedLevel, requestedGroup, requestedBranch);
                        }
                    });
                });
            }

            // üîô Fonction d'initialisation du retour vers le modale pr√©c√©dent
            // Cette fonction permet de revenir √† un modale de niveau inf√©rieur dans la m√™me logique de groupe et branche.
            // Elle tente d‚Äôabord de retrouver le modale pr√©c√©dent avec la m√™me branche, puis d√©cr√©mente la branche jusqu‚Äô√† 1.
            // Si aucun modale n‚Äôest trouv√© avec une branche, elle tente sans branche.
            // Ce syst√®me √©vite les erreurs de navigation et garantit un retour coh√©rent.
            function initModalRollback() {
                document.querySelectorAll('button[data-returnToParentModal]').forEach(button => {
                    button.addEventListener('click', () => {
                        const currentModal = button.closest('.modal');
                        if (currentModal){
                            const currentLevel = parseInt(currentModal.getAttribute('data-modalLevel'));
                            const currentGroup = currentModal.getAttribute('data-modalGroup');
                            let currentBranch = parseInt(currentModal.getAttribute('data-modalBranch'));

                            document.querySelectorAll('.modal.show').forEach(modal => {
                                const instance = bootstrap.Modal.getInstance(modal);
                                if (instance) instance.hide();
                            });

                            const previousLevel = currentLevel - 1;
                            let targetModal = null;

                            // üîÅ Boucle descendante sur les branches
                            while (currentBranch >= 1 && !targetModal){
                                targetModal = document.querySelector(`.modal[data-modalLevel="${previousLevel}"][data-modalGroup="${currentGroup}"][data-modalBranch="${currentBranch}"]`);
                                currentBranch--;
                            }

                            // üß™ Si aucune branche ne correspond, on tente sans branche
                            if (!targetModal) {
                                targetModal = document.querySelector(`.modal[data-modalLevel="${previousLevel}"][data-modalGroup="${currentGroup}"]`);
                            }

                            if (targetModal){
                                const instance = bootstrap.Modal.getOrCreateInstance(targetModal);
                                instance.show();
                            }else{
                                console.warn("‚ùå Aucun modale pr√©c√©dent trouv√© pour :", previousLevel, currentGroup);
                            }
                        }
                    });
                });
            }

            // üïµÔ∏è‚Äç‚ôÇÔ∏è Fonction de surveillance des fermetures de modales
            // Cette fonction d√©tecte les fermetures de modales et d√©cide si le modale initial doit √™tre rouvert.
            // Elle distingue les fermetures volontaires (ex: clic sur la croix) des fermetures passives (ex: clic ext√©rieur).
            // Si aucune autre modale n‚Äôest ouverte et que la fermeture n‚Äôest pas volontaire, elle peut rouvrir le modale initial.
            // Elle respecte l‚Äôoption `autoRestore` pour activer ou d√©sactiver ce comportement.
            function initModalCloseWatcher() {
                // ‚ùå D√©tection du clic sur la croix
                document.querySelectorAll('.modal .btn-close').forEach(closeButton => {
                    closeButton.addEventListener('click', () => {
                        modalFlowConfig.manualClose = true;
                    });
                });

                // ‚ùå D√©tection des fermetures volontaires via le bouton "Fermer" dans le footer
                document.querySelectorAll('button[data-bs-dismiss="modal"]').forEach(button => {
                    button.addEventListener('click', () => {
                        modalFlowConfig.manualClose = true;
                    });
                });

                // üîç √âcoute des fermetures de modales
                document.querySelectorAll('.modal').forEach(modal => {
                    modal.addEventListener('hidden.bs.modal', () => {
                        if (document.querySelector('.modal.show')) {
                            modalFlowConfig.manualClose = false;
                            return;
                        }

                        const closedLevel = modal.getAttribute('data-modalLevel');
                        const closedGroup = modal.getAttribute('data-modalGroup');
                        const closedBranch = modal.getAttribute('data-modalBranch');

                        // ‚ùå Si fermeture volontaire ou fermeture du modale initial ‚Üí pas de r√©ouverture
                        if (
                            modalFlowConfig.manualClose ||
                            (modalFlowConfig.initialLevel === closedLevel &&
                             modalFlowConfig.initialGroup === closedGroup &&
                             modalFlowConfig.initialBranch === closedBranch)
                        ){
                            resetModalTracking();
                            return;
                        }

                        // ‚úÖ R√©ouverture automatique du modale initial
                        if (modalFlowConfig.autoRestore && modalFlowConfig.initialLevel && modalFlowConfig.initialGroup) {
                            const targetInitialModal = document.querySelector(`.modal[data-modalLevel="${modalFlowConfig.initialLevel}"][data-modalGroup="${modalFlowConfig.initialGroup}"][data-modalBranch="${modalFlowConfig.initialBranch}"]`);
                            if (targetInitialModal) {
                                const instance = bootstrap.Modal.getOrCreateInstance(targetInitialModal);
                                instance.show();
                            }
                            resetModalTracking();
                        }
                    });
                });
            }

            // üöÄ Initialisation globale
            const modalFlowConfig = createModalFlowConfig({ initialLevel: null, initialGroup: null, initialBranch: null, manualClose: false, autoRestore: true });
            initModalOpening();
            initModalRollback();
            initModalCloseWatcher();
            </script>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    </Body>
</HTML>